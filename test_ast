(source_file [0, 0] - [117, 0]
  (package_header [0, 0] - [0, 28]
    (identifier [0, 8] - [0, 28]
      (simple_identifier [0, 8] - [0, 10])
      (simple_identifier [0, 11] - [0, 18])
      (simple_identifier [0, 19] - [0, 22])
      (simple_identifier [0, 23] - [0, 28])))
  (import_list [2, 0] - [13, 3]
    (import_header [2, 0] - [2, 37]
      (identifier [2, 7] - [2, 37]
        (simple_identifier [2, 7] - [2, 9])
        (simple_identifier [2, 10] - [2, 17])
        (simple_identifier [2, 18] - [2, 21])
        (simple_identifier [2, 22] - [2, 27])
        (simple_identifier [2, 28] - [2, 37])))
    (import_header [3, 0] - [3, 52]
      (identifier [3, 7] - [3, 52]
        (simple_identifier [3, 7] - [3, 10])
        (simple_identifier [3, 11] - [3, 20])
        (simple_identifier [3, 21] - [3, 28])
        (simple_identifier [3, 29] - [3, 39])
        (simple_identifier [3, 40] - [3, 52])))
    (import_header [4, 0] - [4, 54]
      (identifier [4, 7] - [4, 54]
        (simple_identifier [4, 7] - [4, 10])
        (simple_identifier [4, 11] - [4, 17])
        (simple_identifier [4, 18] - [4, 21])
        (simple_identifier [4, 22] - [4, 28])
        (simple_identifier [4, 29] - [4, 35])
        (simple_identifier [4, 36] - [4, 54])))
    (import_header [5, 0] - [5, 50]
      (identifier [5, 7] - [5, 50]
        (simple_identifier [5, 7] - [5, 10])
        (simple_identifier [5, 11] - [5, 17])
        (simple_identifier [5, 18] - [5, 21])
        (simple_identifier [5, 22] - [5, 28])
        (simple_identifier [5, 29] - [5, 35])
        (simple_identifier [5, 36] - [5, 50])))
    (import_header [6, 0] - [6, 28]
      (identifier [6, 7] - [6, 26]
        (simple_identifier [6, 7] - [6, 14])
        (simple_identifier [6, 15] - [6, 26]))
      (wildcard_import [6, 27] - [6, 28]))
    (import_header [7, 0] - [7, 59]
      (identifier [7, 7] - [7, 59]
        (simple_identifier [7, 7] - [7, 10])
        (simple_identifier [7, 11] - [7, 26])
        (simple_identifier [7, 27] - [7, 33])
        (simple_identifier [7, 34] - [7, 44])
        (simple_identifier [7, 45] - [7, 59])))
    (import_header [8, 0] - [13, 3]
      (identifier [8, 7] - [8, 16]
        (simple_identifier [8, 7] - [8, 11])
        (simple_identifier [8, 12] - [8, 16]))
      (wildcard_import [8, 17] - [8, 18])
      (multiline_comment [10, 0] - [13, 3])))
  (class_declaration [14, 0] - [116, 1]
    (modifiers [14, 0] - [15, 28]
      (annotation [14, 0] - [14, 7]
        (user_type [14, 1] - [14, 7]
          (type_identifier [14, 1] - [14, 7])))
      (annotation [15, 0] - [15, 28]
        (constructor_invocation [15, 1] - [15, 28]
          (user_type [15, 1] - [15, 6]
            (type_identifier [15, 1] - [15, 6]))
          (value_arguments [15, 6] - [15, 28]
            (value_argument [15, 7] - [15, 27]
              (simple_identifier [15, 7] - [15, 11])
              (string_literal [15, 14] - [15, 27]
                (string_content [15, 15] - [15, 26])))))))
    (type_identifier [16, 6] - [16, 16])
    (class_body [16, 17] - [116, 1]
      (companion_object [17, 4] - [22, 5]
        (class_body [17, 21] - [22, 5]
          (property_declaration [18, 8] - [18, 37]
            (modifiers [18, 8] - [18, 13]
              (property_modifier [18, 8] - [18, 13]))
            (binding_pattern_kind [18, 14] - [18, 17])
            (variable_declaration [18, 18] - [18, 33]
              (simple_identifier [18, 18] - [18, 33]))
            (integer_literal [18, 36] - [18, 37]))
          (property_declaration [19, 8] - [19, 37]
            (modifiers [19, 8] - [19, 13]
              (property_modifier [19, 8] - [19, 13]))
            (binding_pattern_kind [19, 14] - [19, 17])
            (variable_declaration [19, 18] - [19, 33]
              (simple_identifier [19, 18] - [19, 33]))
            (integer_literal [19, 36] - [19, 37]))
          (property_declaration [20, 8] - [20, 38]
            (modifiers [20, 8] - [20, 13]
              (property_modifier [20, 8] - [20, 13]))
            (binding_pattern_kind [20, 14] - [20, 17])
            (variable_declaration [20, 18] - [20, 34]
              (simple_identifier [20, 18] - [20, 34]))
            (integer_literal [20, 37] - [20, 38]))
          (property_declaration [21, 8] - [21, 35]
            (modifiers [21, 8] - [21, 13]
              (property_modifier [21, 8] - [21, 13]))
            (binding_pattern_kind [21, 14] - [21, 17])
            (variable_declaration [21, 18] - [21, 31]
              (simple_identifier [21, 18] - [21, 31]))
            (integer_literal [21, 34] - [21, 35]))))
      (property_declaration [24, 4] - [26, 24]
        (modifiers [24, 4] - [25, 61]
          (annotation [24, 4] - [24, 13]
            (use_site_target [24, 5] - [24, 11])
            (user_type [24, 11] - [24, 13]
              (type_identifier [24, 11] - [24, 13])))
          (annotation [25, 4] - [25, 61]
            (use_site_target [25, 5] - [25, 11])
            (constructor_invocation [25, 11] - [25, 61]
              (user_type [25, 11] - [25, 25]
                (type_identifier [25, 11] - [25, 25]))
              (value_arguments [25, 25] - [25, 61]
                (value_argument [25, 26] - [25, 60]
                  (simple_identifier [25, 26] - [25, 34])
                  (navigation_expression [25, 37] - [25, 60]
                    (simple_identifier [25, 37] - [25, 51])
                    (navigation_suffix [25, 51] - [25, 60]
                      (simple_identifier [25, 52] - [25, 60]))))))))
        (binding_pattern_kind [26, 4] - [26, 7])
        (variable_declaration [26, 8] - [26, 17]
          (simple_identifier [26, 8] - [26, 10])
          (nullable_type [26, 12] - [26, 17]
            (user_type [26, 12] - [26, 16]
              (type_identifier [26, 12] - [26, 16]))))
        (null_literal [26, 20] - [26, 24]))
      (multiline_comment [28, 4] - [30, 7])
      (property_declaration [31, 4] - [33, 33]
        (modifiers [31, 4] - [32, 30]
          (annotation [31, 4] - [31, 54]
            (constructor_invocation [31, 5] - [31, 54]
              (user_type [31, 5] - [31, 19]
                (type_identifier [31, 5] - [31, 19]))
              (value_arguments [31, 19] - [31, 54]
                (value_argument [31, 20] - [31, 53]
                  (simple_identifier [31, 20] - [31, 27])
                  (string_literal [31, 30] - [31, 53]
                    (string_content [31, 31] - [31, 52]))))))
          (annotation [32, 4] - [32, 30]
            (constructor_invocation [32, 5] - [32, 30]
              (user_type [32, 5] - [32, 17]
                (type_identifier [32, 5] - [32, 17]))
              (value_arguments [32, 17] - [32, 30]
                (value_argument [32, 18] - [32, 29]
                  (string_literal [32, 18] - [32, 29]
                    (string_content [32, 19] - [32, 28])))))))
        (binding_pattern_kind [33, 4] - [33, 7])
        (variable_declaration [33, 8] - [33, 26]
          (simple_identifier [33, 8] - [33, 19])
          (nullable_type [33, 21] - [33, 26]
            (user_type [33, 21] - [33, 25]
              (type_identifier [33, 21] - [33, 25]))))
        (null_literal [33, 29] - [33, 33]))
      (multiline_comment [35, 4] - [37, 7])
      (property_declaration [38, 4] - [40, 32]
        (modifiers [38, 4] - [39, 31]
          (annotation [38, 4] - [38, 54]
            (constructor_invocation [38, 5] - [38, 54]
              (user_type [38, 5] - [38, 19]
                (type_identifier [38, 5] - [38, 19]))
              (value_arguments [38, 19] - [38, 54]
                (value_argument [38, 20] - [38, 53]
                  (simple_identifier [38, 20] - [38, 27])
                  (string_literal [38, 30] - [38, 53]
                    (string_content [38, 31] - [38, 52]))))))
          (annotation [39, 4] - [39, 31]
            (constructor_invocation [39, 5] - [39, 31]
              (user_type [39, 5] - [39, 17]
                (type_identifier [39, 5] - [39, 17]))
              (value_arguments [39, 17] - [39, 31]
                (value_argument [39, 18] - [39, 30]
                  (string_literal [39, 18] - [39, 30]
                    (string_content [39, 19] - [39, 29])))))))
        (binding_pattern_kind [40, 4] - [40, 7])
        (variable_declaration [40, 8] - [40, 25]
          (simple_identifier [40, 8] - [40, 18])
          (nullable_type [40, 20] - [40, 25]
            (user_type [40, 20] - [40, 24]
              (type_identifier [40, 20] - [40, 24]))))
        (null_literal [40, 28] - [40, 32]))
      (multiline_comment [42, 4] - [44, 7])
      (property_declaration [45, 4] - [46, 33]
        (modifiers [45, 4] - [45, 30]
          (annotation [45, 4] - [45, 30]
            (constructor_invocation [45, 5] - [45, 30]
              (user_type [45, 5] - [45, 17]
                (type_identifier [45, 5] - [45, 17]))
              (value_arguments [45, 17] - [45, 30]
                (value_argument [45, 18] - [45, 29]
                  (string_literal [45, 18] - [45, 29]
                    (string_content [45, 19] - [45, 28])))))))
        (binding_pattern_kind [46, 4] - [46, 7])
        (variable_declaration [46, 8] - [46, 26]
          (simple_identifier [46, 8] - [46, 17])
          (nullable_type [46, 19] - [46, 26]
            (user_type [46, 19] - [46, 25]
              (type_identifier [46, 19] - [46, 25]))))
        (null_literal [46, 29] - [46, 33]))
      (multiline_comment [48, 4] - [50, 7])
      (property_declaration [51, 4] - [52, 36]
        (modifiers [51, 4] - [51, 38]
          (annotation [51, 4] - [51, 38]
            (constructor_invocation [51, 5] - [51, 38]
              (user_type [51, 5] - [51, 17]
                (type_identifier [51, 5] - [51, 17]))
              (value_arguments [51, 17] - [51, 38]
                (value_argument [51, 18] - [51, 37]
                  (string_literal [51, 18] - [51, 37]
                    (string_content [51, 19] - [51, 36])))))))
        (binding_pattern_kind [52, 4] - [52, 7])
        (variable_declaration [52, 8] - [52, 29]
          (simple_identifier [52, 8] - [52, 20])
          (nullable_type [52, 22] - [52, 29]
            (user_type [52, 22] - [52, 28]
              (type_identifier [52, 22] - [52, 28]))))
        (null_literal [52, 32] - [52, 36]))
      (property_declaration [54, 4] - [55, 23]
        (modifiers [54, 4] - [54, 27]
          (annotation [54, 4] - [54, 27]
            (constructor_invocation [54, 5] - [54, 27]
              (user_type [54, 5] - [54, 17]
                (type_identifier [54, 5] - [54, 17]))
              (value_arguments [54, 17] - [54, 27]
                (value_argument [54, 18] - [54, 26]
                  (string_literal [54, 18] - [54, 26]
                    (string_content [54, 19] - [54, 25])))))))
        (binding_pattern_kind [55, 4] - [55, 7])
        (variable_declaration [55, 8] - [55, 19]
          (simple_identifier [55, 8] - [55, 14])
          (user_type [55, 16] - [55, 19]
            (type_identifier [55, 16] - [55, 19])))
        (integer_literal [55, 22] - [55, 23]))
      (property_declaration [57, 4] - [58, 41]
        (modifiers [57, 4] - [57, 38]
          (annotation [57, 4] - [57, 38]
            (constructor_invocation [57, 5] - [57, 38]
              (user_type [57, 5] - [57, 17]
                (type_identifier [57, 5] - [57, 17]))
              (value_arguments [57, 17] - [57, 38]
                (value_argument [57, 18] - [57, 37]
                  (string_literal [57, 18] - [57, 37]
                    (string_content [57, 19] - [57, 36])))))))
        (binding_pattern_kind [58, 4] - [58, 7])
        (variable_declaration [58, 8] - [58, 34]
          (simple_identifier [58, 8] - [58, 25])
          (nullable_type [58, 27] - [58, 34]
            (user_type [58, 27] - [58, 33]
              (type_identifier [58, 27] - [58, 33]))))
        (null_literal [58, 37] - [58, 41]))
      (property_declaration [60, 4] - [63, 41]
        (modifiers [60, 4] - [62, 24]
          (annotation [60, 4] - [60, 20]
            (use_site_target [60, 5] - [60, 11])
            (user_type [60, 11] - [60, 20]
              (type_identifier [60, 11] - [60, 20])))
          (annotation [61, 4] - [61, 23]
            (use_site_target [61, 5] - [61, 9])
            (user_type [61, 9] - [61, 23]
              (type_identifier [61, 9] - [61, 23])))
          (annotation [62, 4] - [62, 24]
            (constructor_invocation [62, 5] - [62, 24]
              (user_type [62, 5] - [62, 17]
                (type_identifier [62, 5] - [62, 17]))
              (value_arguments [62, 17] - [62, 24]
                (value_argument [62, 18] - [62, 23]
                  (string_literal [62, 18] - [62, 23]
                    (string_content [62, 19] - [62, 22])))))))
        (binding_pattern_kind [63, 4] - [63, 7])
        (variable_declaration [63, 8] - [63, 34]
          (simple_identifier [63, 8] - [63, 25])
          (nullable_type [63, 27] - [63, 34]
            (user_type [63, 27] - [63, 33]
              (type_identifier [63, 27] - [63, 33]))))
        (null_literal [63, 37] - [63, 41]))
      (getter [64, 8] - [69, 9]
        (function_body [64, 14] - [69, 9]
          (statements [65, 12] - [68, 24]
            (if_expression [65, 12] - [67, 13]
              condition: (conjunction_expression [65, 16] - [65, 67]
                (equality_expression [65, 16] - [65, 29]
                  (simple_identifier [65, 16] - [65, 21])
                  (null_literal [65, 25] - [65, 29]))
                (equality_expression [65, 33] - [65, 67]
                  (simple_identifier [65, 33] - [65, 59])
                  (null_literal [65, 63] - [65, 67])))
              consequence: (control_structure_body [65, 69] - [67, 13]
                (statements [66, 16] - [66, 96]
                  (assignment [66, 16] - [66, 96]
                    (directly_assignable_expression [66, 16] - [66, 21]
                      (simple_identifier [66, 16] - [66, 21]))
                    (call_expression [66, 24] - [66, 96]
                      (navigation_expression [66, 24] - [66, 68]
                        (call_expression [66, 24] - [66, 56]
                          (navigation_expression [66, 24] - [66, 54]
                            (simple_identifier [66, 24] - [66, 42])
                            (navigation_suffix [66, 42] - [66, 54]
                              (simple_identifier [66, 43] - [66, 54])))
                          (call_suffix [66, 54] - [66, 56]
                            (value_arguments [66, 54] - [66, 56])))
                        (navigation_suffix [66, 56] - [66, 68]
                          (simple_identifier [66, 57] - [66, 68])))
                      (call_suffix [66, 68] - [66, 96]
                        (value_arguments [66, 68] - [66, 96]
                          (value_argument [66, 69] - [66, 95]
                            (simple_identifier [66, 69] - [66, 95])))))))))
            (jump_expression [68, 12] - [68, 24]
              (simple_identifier [68, 19] - [68, 24])))))
      (setter [70, 8] - [78, 9]
        (parameter_with_optional_type [70, 12] - [70, 17]
          (simple_identifier [70, 12] - [70, 17]))
        (function_body [70, 19] - [78, 9]
          (statements [71, 12] - [77, 13]
            (if_expression [71, 12] - [77, 13]
              condition: (equality_expression [71, 16] - [71, 30]
                (simple_identifier [71, 16] - [71, 21])
                (simple_identifier [71, 25] - [71, 30]))
              consequence: (control_structure_body [71, 32] - [77, 13]
                (statements [72, 16] - [76, 17]
                  (assignment [72, 16] - [72, 29]
                    (directly_assignable_expression [72, 16] - [72, 21]
                      (simple_identifier [72, 16] - [72, 21]))
                    (simple_identifier [72, 24] - [72, 29]))
                  (if_expression [73, 16] - [76, 17]
                    condition: (equality_expression [73, 20] - [73, 33]
                      (simple_identifier [73, 20] - [73, 25])
                      (null_literal [73, 29] - [73, 33]))
                    consequence: (control_structure_body [73, 35] - [76, 17]
                      (statements [74, 20] - [75, 94]
                        (assignment [74, 20] - [74, 100]
                          (directly_assignable_expression [74, 20] - [74, 46]
                            (simple_identifier [74, 20] - [74, 46]))
                          (call_expression [74, 49] - [74, 100]
                            (navigation_expression [74, 49] - [74, 93]
                              (call_expression [74, 49] - [74, 81]
                                (navigation_expression [74, 49] - [74, 79]
                                  (simple_identifier [74, 49] - [74, 67])
                                  (navigation_suffix [74, 67] - [74, 79]
                                    (simple_identifier [74, 68] - [74, 79])))
                                (call_suffix [74, 79] - [74, 81]
                                  (value_arguments [74, 79] - [74, 81])))
                              (navigation_suffix [74, 81] - [74, 93]
                                (simple_identifier [74, 82] - [74, 93])))
                            (call_suffix [74, 93] - [74, 100]
                              (value_arguments [74, 93] - [74, 100]
                                (value_argument [74, 94] - [74, 99]
                                  (simple_identifier [74, 94] - [74, 99]))))))
                        (assignment [75, 20] - [75, 94]
                          (directly_assignable_expression [75, 20] - [75, 43]
                            (simple_identifier [75, 20] - [75, 43]))
                          (call_expression [75, 46] - [75, 94]
                            (navigation_expression [75, 46] - [75, 87]
                              (call_expression [75, 46] - [75, 78]
                                (navigation_expression [75, 46] - [75, 76]
                                  (simple_identifier [75, 46] - [75, 64])
                                  (navigation_suffix [75, 64] - [75, 76]
                                    (simple_identifier [75, 65] - [75, 76])))
                                (call_suffix [75, 76] - [75, 78]
                                  (value_arguments [75, 76] - [75, 78])))
                              (navigation_suffix [75, 78] - [75, 87]
                                (simple_identifier [75, 79] - [75, 87])))
                            (call_suffix [75, 87] - [75, 94]
                              (value_arguments [75, 87] - [75, 94]
                                (value_argument [75, 88] - [75, 93]
                                  (simple_identifier [75, 88] - [75, 93])))))))))))))))
      (property_declaration [80, 4] - [82, 50]
        (modifiers [80, 4] - [81, 58]
          (annotation [80, 4] - [80, 47]
            (use_site_target [80, 5] - [80, 11])
            (constructor_invocation [80, 11] - [80, 47]
              (user_type [80, 11] - [80, 17]
                (type_identifier [80, 11] - [80, 17]))
              (value_arguments [80, 17] - [80, 47]
                (value_argument [80, 18] - [80, 46]
                  (simple_identifier [80, 18] - [80, 22])
                  (string_literal [80, 25] - [80, 46]
                    (string_content [80, 26] - [80, 45]))))))
          (annotation [81, 4] - [81, 58]
            (constructor_invocation [81, 5] - [81, 58]
              (user_type [81, 5] - [81, 17]
                (type_identifier [81, 5] - [81, 17]))
              (value_arguments [81, 17] - [81, 58]
                (value_argument [81, 18] - [81, 57]
                  (simple_identifier [81, 18] - [81, 24])
                  (navigation_expression [81, 27] - [81, 57]
                    (navigation_expression [81, 27] - [81, 46]
                      (simple_identifier [81, 27] - [81, 39])
                      (navigation_suffix [81, 39] - [81, 46]
                        (simple_identifier [81, 40] - [81, 46])))
                    (navigation_suffix [81, 46] - [81, 57]
                      (simple_identifier [81, 47] - [81, 57]))))))))
        (binding_pattern_kind [82, 4] - [82, 7])
        (variable_declaration [82, 8] - [82, 43]
          (simple_identifier [82, 8] - [82, 34])
          (nullable_type [82, 36] - [82, 43]
            (user_type [82, 36] - [82, 42]
              (type_identifier [82, 36] - [82, 42]))))
        (null_literal [82, 46] - [82, 50]))
      (getter [83, 8] - [88, 9]
        (function_body [83, 14] - [88, 9]
          (statements [84, 12] - [87, 24]
            (if_expression [84, 12] - [86, 13]
              condition: (conjunction_expression [84, 16] - [84, 58]
                (equality_expression [84, 16] - [84, 29]
                  (simple_identifier [84, 16] - [84, 21])
                  (null_literal [84, 25] - [84, 29]))
                (equality_expression [84, 33] - [84, 58]
                  (simple_identifier [84, 33] - [84, 50])
                  (null_literal [84, 54] - [84, 58])))
              consequence: (control_structure_body [84, 60] - [86, 13]
                (statements [85, 16] - [85, 87]
                  (assignment [85, 16] - [85, 87]
                    (directly_assignable_expression [85, 16] - [85, 21]
                      (simple_identifier [85, 16] - [85, 21]))
                    (call_expression [85, 24] - [85, 87]
                      (navigation_expression [85, 24] - [85, 68]
                        (call_expression [85, 24] - [85, 56]
                          (navigation_expression [85, 24] - [85, 54]
                            (simple_identifier [85, 24] - [85, 42])
                            (navigation_suffix [85, 42] - [85, 54]
                              (simple_identifier [85, 43] - [85, 54])))
                          (call_suffix [85, 54] - [85, 56]
                            (value_arguments [85, 54] - [85, 56])))
                        (navigation_suffix [85, 56] - [85, 68]
                          (simple_identifier [85, 57] - [85, 68])))
                      (call_suffix [85, 68] - [85, 87]
                        (value_arguments [85, 68] - [85, 87]
                          (value_argument [85, 69] - [85, 86]
                            (simple_identifier [85, 69] - [85, 86])))))))))
            (jump_expression [87, 12] - [87, 24]
              (simple_identifier [87, 19] - [87, 24])))))
      (setter [89, 8] - [97, 9]
        (parameter_with_optional_type [89, 12] - [89, 17]
          (simple_identifier [89, 12] - [89, 17]))
        (function_body [89, 19] - [97, 9]
          (statements [90, 12] - [96, 13]
            (if_expression [90, 12] - [96, 13]
              condition: (equality_expression [90, 16] - [90, 30]
                (simple_identifier [90, 16] - [90, 21])
                (simple_identifier [90, 25] - [90, 30]))
              consequence: (control_structure_body [90, 32] - [96, 13]
                (statements [91, 16] - [95, 17]
                  (assignment [91, 16] - [91, 29]
                    (directly_assignable_expression [91, 16] - [91, 21]
                      (simple_identifier [91, 16] - [91, 21]))
                    (simple_identifier [91, 24] - [91, 29]))
                  (if_expression [92, 16] - [95, 17]
                    condition: (equality_expression [92, 20] - [92, 33]
                      (simple_identifier [92, 20] - [92, 25])
                      (null_literal [92, 29] - [92, 33]))
                    consequence: (control_structure_body [92, 35] - [95, 17]
                      (statements [93, 20] - [94, 106]
                        (assignment [93, 20] - [93, 91]
                          (directly_assignable_expression [93, 20] - [93, 37]
                            (simple_identifier [93, 20] - [93, 37]))
                          (call_expression [93, 40] - [93, 91]
                            (navigation_expression [93, 40] - [93, 84]
                              (call_expression [93, 40] - [93, 72]
                                (navigation_expression [93, 40] - [93, 70]
                                  (simple_identifier [93, 40] - [93, 58])
                                  (navigation_suffix [93, 58] - [93, 70]
                                    (simple_identifier [93, 59] - [93, 70])))
                                (call_suffix [93, 70] - [93, 72]
                                  (value_arguments [93, 70] - [93, 72])))
                              (navigation_suffix [93, 72] - [93, 84]
                                (simple_identifier [93, 73] - [93, 84])))
                            (call_suffix [93, 84] - [93, 91]
                              (value_arguments [93, 84] - [93, 91]
                                (value_argument [93, 85] - [93, 90]
                                  (simple_identifier [93, 85] - [93, 90]))))))
                        (assignment [94, 20] - [94, 106]
                          (directly_assignable_expression [94, 20] - [94, 43]
                            (simple_identifier [94, 20] - [94, 43]))
                          (call_expression [94, 46] - [94, 106]
                            (navigation_expression [94, 46] - [94, 87]
                              (call_expression [94, 46] - [94, 78]
                                (navigation_expression [94, 46] - [94, 76]
                                  (simple_identifier [94, 46] - [94, 64])
                                  (navigation_suffix [94, 64] - [94, 76]
                                    (simple_identifier [94, 65] - [94, 76])))
                                (call_suffix [94, 76] - [94, 78]
                                  (value_arguments [94, 76] - [94, 78])))
                              (navigation_suffix [94, 78] - [94, 87]
                                (simple_identifier [94, 79] - [94, 87])))
                            (call_suffix [94, 87] - [94, 106]
                              (value_arguments [94, 87] - [94, 106]
                                (value_argument [94, 88] - [94, 105]
                                  (simple_identifier [94, 88] - [94, 105])))))))))))))))
      (property_declaration [99, 4] - [100, 47]
        (modifiers [99, 4] - [99, 58]
          (annotation [99, 4] - [99, 58]
            (constructor_invocation [99, 5] - [99, 58]
              (user_type [99, 5] - [99, 17]
                (type_identifier [99, 5] - [99, 17]))
              (value_arguments [99, 17] - [99, 58]
                (value_argument [99, 18] - [99, 57]
                  (simple_identifier [99, 18] - [99, 24])
                  (navigation_expression [99, 27] - [99, 57]
                    (navigation_expression [99, 27] - [99, 46]
                      (simple_identifier [99, 27] - [99, 39])
                      (navigation_suffix [99, 39] - [99, 46]
                        (simple_identifier [99, 40] - [99, 46])))
                    (navigation_suffix [99, 46] - [99, 57]
                      (simple_identifier [99, 47] - [99, 57]))))))))
        (binding_pattern_kind [100, 4] - [100, 7])
        (variable_declaration [100, 8] - [100, 40]
          (simple_identifier [100, 8] - [100, 31])
          (nullable_type [100, 33] - [100, 40]
            (user_type [100, 33] - [100, 39]
              (type_identifier [100, 33] - [100, 39]))))
        (null_literal [100, 43] - [100, 47]))
      (line_comment [102, 4] - [102, 55])
      (property_declaration [103, 4] - [103, 33]
        (binding_pattern_kind [103, 4] - [103, 7])
        (variable_declaration [103, 8] - [103, 26]
          (simple_identifier [103, 8] - [103, 19])
          (nullable_type [103, 21] - [103, 26]
            (user_type [103, 21] - [103, 25]
              (type_identifier [103, 21] - [103, 25]))))
        (null_literal [103, 29] - [103, 33]))
      (property_declaration [105, 4] - [105, 27]
        (binding_pattern_kind [105, 4] - [105, 7])
        (variable_declaration [105, 8] - [105, 20]
          (simple_identifier [105, 8] - [105, 13])
          (nullable_type [105, 15] - [105, 20]
            (user_type [105, 15] - [105, 19]
              (type_identifier [105, 15] - [105, 19]))))
        (null_literal [105, 23] - [105, 27]))
      (property_declaration [107, 4] - [108, 33]
        (modifiers [107, 4] - [107, 38]
          (annotation [107, 4] - [107, 38]
            (use_site_target [107, 5] - [107, 11])
            (constructor_invocation [107, 11] - [107, 38]
              (user_type [107, 11] - [107, 21]
                (type_identifier [107, 11] - [107, 21]))
              (value_arguments [107, 21] - [107, 38]
                (value_argument [107, 22] - [107, 37]
                  (navigation_expression [107, 22] - [107, 37]
                    (simple_identifier [107, 22] - [107, 30])
                    (navigation_suffix [107, 30] - [107, 37]
                      (simple_identifier [107, 31] - [107, 37]))))))))
        (binding_pattern_kind [108, 4] - [108, 7])
        (variable_declaration [108, 8] - [108, 26]
          (simple_identifier [108, 8] - [108, 14])
          (nullable_type [108, 16] - [108, 26]
            (user_type [108, 16] - [108, 25]
              (type_identifier [108, 16] - [108, 25]))))
        (null_literal [108, 29] - [108, 33]))
      (property_declaration [110, 4] - [110, 32]
        (binding_pattern_kind [110, 4] - [110, 7])
        (variable_declaration [110, 8] - [110, 25]
          (simple_identifier [110, 8] - [110, 18])
          (nullable_type [110, 20] - [110, 25]
            (user_type [110, 20] - [110, 24]
              (type_identifier [110, 20] - [110, 24]))))
        (null_literal [110, 28] - [110, 32]))
      (function_declaration [112, 4] - [115, 5]
        (modifiers [112, 4] - [112, 14]
          (annotation [112, 4] - [112, 14]
            (user_type [112, 5] - [112, 14]
              (type_identifier [112, 5] - [112, 14]))))
        (simple_identifier [113, 8] - [113, 16])
        (function_value_parameters [113, 16] - [113, 18])
        (user_type [113, 20] - [113, 27]
          (type_identifier [113, 20] - [113, 27]))
        (function_body [113, 28] - [115, 5]
          (statements [114, 8] - [114, 67]
            (jump_expression [114, 8] - [114, 67]
              (disjunction_expression [114, 15] - [114, 67]
                (equality_expression [114, 15] - [114, 40]
                  (simple_identifier [114, 15] - [114, 21])
                  (simple_identifier [114, 25] - [114, 40]))
                (equality_expression [114, 44] - [114, 67]
                  (simple_identifier [114, 44] - [114, 50])
                  (simple_identifier [114, 54] - [114, 67]))))))))))
