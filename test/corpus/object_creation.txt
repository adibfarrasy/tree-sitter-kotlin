================================================================================
simple object creation
================================================================================
ArrayList()
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (value_arguments))))

================================================================================
object creation with arguments
================================================================================
Person("John", 30)
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (value_arguments
        (value_argument
          (string_literal
            (string_content)))
        (value_argument
          (integer_literal))))))

================================================================================
object creation with named arguments
================================================================================
Person(name = "John", age = 30)
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (value_arguments
        (value_argument
          (simple_identifier)
          (string_literal
            (string_content)))
        (value_argument
          (simple_identifier)
          (integer_literal))))))

================================================================================
generic object creation
================================================================================
ArrayList<String>()
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (type_arguments
        (type_projection
          (user_type
            (type_identifier))))
      (value_arguments))))

================================================================================
nested object creation
================================================================================
Outer(Inner(42))
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (value_arguments
        (value_argument
          (call_expression
            (simple_identifier)
            (call_suffix
              (value_arguments
                (value_argument
                  (integer_literal))))))))))

================================================================================
object creation with lambda
================================================================================
Thread {
    println("Running")
}
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (annotated_lambda
        (lambda_literal
          (statements
            (call_expression
              (simple_identifier)
              (call_suffix
                (value_arguments
                  (value_argument
                    (string_literal
                      (string_content))))))))))))

================================================================================
data class creation
================================================================================
Point(x = 10, y = 20)
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (value_arguments
        (value_argument
          (simple_identifier)
          (integer_literal))
        (value_argument
          (simple_identifier)
          (integer_literal))))))

================================================================================
object creation with type inference
================================================================================
val list = mutableListOf<Int>()
--------------------------------------------------------------------------------
(source_file
  (property_declaration
    (binding_pattern_kind)
    (variable_declaration
      (simple_identifier))
    (call_expression
      (simple_identifier)
      (call_suffix
        (type_arguments
          (type_projection
            (user_type
              (type_identifier))))
        (value_arguments)))))

================================================================================
enum object creation
================================================================================
Color.RED
--------------------------------------------------------------------------------
(source_file
  (navigation_expression
    (simple_identifier)
    (navigation_suffix
      (simple_identifier))))

================================================================================
companion object access
================================================================================
MyClass.Companion.getInstance()
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (navigation_expression
      (navigation_expression
        (simple_identifier)
        (navigation_suffix
          (simple_identifier)))
      (navigation_suffix
        (simple_identifier)))
    (call_suffix
      (value_arguments))))

================================================================================
anonymous object creation
================================================================================
object : Runnable {
    override fun run() {
        println("Running")
    }
}
--------------------------------------------------------------------------------
(source_file
  (object_literal
    (delegation_specifier
      (user_type
        (type_identifier)))
    (class_body
      (function_declaration
        (modifiers
          (member_modifier))
        (simple_identifier)
        (function_value_parameters)
        (function_body
          (statements
            (call_expression
              (simple_identifier)
              (call_suffix
                (value_arguments
                  (value_argument
                    (string_literal
                      (string_content))))))))))))

================================================================================
factory function call
================================================================================
createInstance("param")
--------------------------------------------------------------------------------
(source_file
  (call_expression
    (simple_identifier)
    (call_suffix
      (value_arguments
        (value_argument
          (string_literal
            (string_content)))))))
